Reminder:

Test Plan - is a place holder for what follows next, has useful options for configuring Thread Groups
    Thread Group -  contains a number of things doing something in parallel e.g. Users/Samplers
        Config Elements - provide configuration and helper elements e.g. HTTP Cookie Manager/HTTP Header Manager
        Pre-processors - allow to change requests before we fire them
        Timer - adds wait time
        Logic Controller/Sampler
            Logic Controller - controls flow very much like in programming languages with if, for, while, ...
            Sampler -  sampler does the work e.g. sends HTTP request, JDBC request, ...
        Post-processors - can analyze response of the request
        Assertions - verify results
        Listener - allow to visualize/summarize results

What do we need to know to develop a scripted elements for JMeter ?

- JSR233 (from https://www.openhab.org/docs/configuration/jsr223.html):

     JSR223 (spec) is a standard scripting API for Java Virtual Machine (JVM) languages. The JVM languages provide varying levels of support for the JSR223 API and interoperability with the Java runtime.
     Currently the following languages are known to work well : Jython (Python on the JVM), Nashorn Javascript (ECMAScript implementation included in JDK8 through 10, deprecated in 11), and Apache Groovy (JVM scripting language).

     (From https://en.wikipedia.org/wiki/List_of_JVM_languages)

        This list of JVM Languages comprises notable computer programming languages that are used to produce computer software that runs on the Java virtual machine (JVM). Some of these languages are interpreted by a Java program, and some are compiled to Java bytecode and JIT-compiled during execution as regular Java programs to improve performance.

        : clojure, groovy, js nashorn and rhino, and others ...

- JMETER API:

    Jmeter API can be used to developed scripted elements of Jmeter:
        https://jmeter.apache.org/api/org/apache/jmeter/threads/JMeterVariables.html e.g. see vars.getIterations()
    Jmeter has also commonly used contect ctx:
        https://jmeter.apache.org/api/org/apache/jmeter/threads/JMeterContext.html e.g. see ctx.getThreadNum() or ctx.getThreadGroup().getNumThreads()

 - Properties vs Variables

    User defined variables - each threads get a copy
    Variables - scope is thread only
    Properties - scope is global
        Local properties - single machine, referenced by -JpropertyName
        Global properties - single machine and remotes, refereneced by -GpropertyName

 How to use in jmeter elements:

    vars:

    ${alternativeURL} - reference
    ${__V(${alternativeURL}})} - reference with name as evaluated expression

    props:

    ${__P(MY_PROP, DEFAULT_VALUE)}

 How to use in scripted elements:

     vars - ( JMeterVariables) - gives read/write access to variables:

         vars.get(key);
         vars.put(key,value);
         vars.putObject("OBJ1",new Object());
         vars.getObject("OBJ2");

     props - (JMeterProperties - class java.util.Properties):

        props.get("MY_PROP");
        props.put("MY_PROP","FOO");

Warning:
  When developing script in UI props once set are set and sometimes one needs to restart JMeter to clean them up.